{"version":3,"file":"bundle.cjs","mappings":"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","sources":["webpack://ws_task/./node_modules/ws/lib/buffer-util.js","webpack://ws_task/./node_modules/ws/lib/constants.js","webpack://ws_task/./node_modules/ws/lib/event-target.js","webpack://ws_task/./node_modules/ws/lib/extension.js","webpack://ws_task/./node_modules/ws/lib/limiter.js","webpack://ws_task/./node_modules/ws/lib/permessage-deflate.js","webpack://ws_task/./node_modules/ws/lib/receiver.js","webpack://ws_task/./node_modules/ws/lib/sender.js","webpack://ws_task/./node_modules/ws/lib/stream.js","webpack://ws_task/./node_modules/ws/lib/subprotocol.js","webpack://ws_task/./node_modules/ws/lib/validation.js","webpack://ws_task/./node_modules/ws/lib/websocket-server.js","webpack://ws_task/./node_modules/ws/lib/websocket.js","webpack://ws_task/external node-commonjs \"crypto\"","webpack://ws_task/external node-commonjs \"events\"","webpack://ws_task/external node-commonjs \"http\"","webpack://ws_task/external node-commonjs \"https\"","webpack://ws_task/external node-commonjs \"net\"","webpack://ws_task/external node-commonjs \"stream\"","webpack://ws_task/external node-commonjs \"tls\"","webpack://ws_task/external node-commonjs \"url\"","webpack://ws_task/external node-commonjs \"zlib\"","webpack://ws_task/webpack/bootstrap","webpack://ws_task/webpack/runtime/compat get default export","webpack://ws_task/webpack/runtime/define property getters","webpack://ws_task/webpack/runtime/hasOwnProperty shorthand","webpack://ws_task/external node-commonjs \"fs\"","webpack://ws_task/external node-commonjs \"path\"","webpack://ws_task/./src/http_server/index.ts","webpack://ws_task/./node_modules/ws/wrapper.mjs","webpack://ws_task/external node-commonjs \"node:crypto\"","webpack://ws_task/./node_modules/uuid/dist/esm-node/native.js","webpack://ws_task/./node_modules/uuid/dist/esm-node/rng.js","webpack://ws_task/./node_modules/uuid/dist/esm-node/stringify.js","webpack://ws_task/./node_modules/uuid/dist/esm-node/v4.js","webpack://ws_task/./src/db/dto.ts","webpack://ws_task/external node-commonjs \"node:events\"","webpack://ws_task/./src/db/lock.ts","webpack://ws_task/./src/db/index.ts","webpack://ws_task/./src/websocket_server/dto.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processRegMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendUpdateWinnersMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendUpdateRoomMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processCreateRoomMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processAttackMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendTurnMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processRandomAttackMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_from_server/processUpdateRoomMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_to_server/sendAddUserToRoomMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_from_server/processTurnMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_to_server/sendAttackMessage.ts","webpack://ws_task/./src/websocket_client_bot/processServerMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_from_server/processCreateGameMessage.ts","webpack://ws_task/./src/websocket_client_bot/messages_to_server/sendAddShipsMessage.ts","webpack://ws_task/./src/websocket_client_bot/bot.ts","webpack://ws_task/./src/websocket_client_bot/index.ts","webpack://ws_task/./src/websocket_server/process_messages/index.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendAttackMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendFinishMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendRegMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processAddUserToRoomMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendCreateGameMessages.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_from_user/processAddShipsMessage.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendStartGameMessages.ts","webpack://ws_task/./src/websocket_client_bot/messages_to_server/sendRegMessage.ts","webpack://ws_task/./index.ts","webpack://ws_task/./src/websocket_server/index.ts","webpack://ws_task/./src/websocket_server/process_messages/messages_to_user/sendDiconnectMessage.ts"],"sourcesContent":["'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst https = require('https');\nconst net = require('net');\nconst tls = require('tls');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalSecure = isSecure;\n      websocket._originalHost = parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = parsedUrl.host === websocket._originalHost;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","import * as fs from 'fs';\nimport * as path from 'path';\nimport * as http from 'http';\n\nexport const httpServer = http.createServer();\n\nhttpServer.on('request', (req: http.IncomingMessage, res: http.ServerResponse) => {\n    const __dirname: string = path.resolve(path.dirname(''));\n    const file_path: string = __dirname + (req.url === '/' ? '/front/index.html' : '/front' + req.url);\n    fs.readFile(file_path, function (err, data) {\n        if (err) {\n            res.writeHead(404);\n            res.end(JSON.stringify(err));\n            return;\n        }\n        res.writeHead(200);\n        res.end(data);\n    });\n});\n","import createWebSocketStream from './lib/stream.js';\nimport Receiver from './lib/receiver.js';\nimport Sender from './lib/sender.js';\nimport WebSocket from './lib/websocket.js';\nimport WebSocketServer from './lib/websocket-server.js';\n\nexport { createWebSocketStream, Receiver, Sender, WebSocket, WebSocketServer };\nexport default WebSocket;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:crypto\");","import crypto from 'node:crypto';\nexport default {\n  randomUUID: crypto.randomUUID\n};","import crypto from 'node:crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import WebSocket from 'ws';\n\nexport interface User {\n    login: string,\n    password: string,\n    isAlive: boolean,\n    lastRequestDateTime: Date,\n    wins: number,\n    ws: WebSocket | undefined,\n}\n\nexport interface IdentifiedUser extends User {\n    id: string,\n}\n\nexport type Position = {\n    x: number,\n    y: number,\n}\n\nexport enum ShipType {\n    small = 'small',\n    medium = 'medium',\n    large = 'large',\n    huge = 'huge',\n}\n\nexport enum AttackStatus {\n    miss = 'miss',\n    killed = 'killed',\n    shot = 'shot',\n}\n\nexport class Ship {\n    private position: Position;\n    private direction: boolean;\n    private length: number;\n    private type: ShipType;\n    private injuredPositions: Position[];\n    constructor(position: Position, direction: boolean, length: number, type: ShipType) {\n        this.position = position;\n        this.direction = direction;\n        this.length = length;\n        this.type = type;\n        this.injuredPositions = [];\n    }\n    public attack(position: Position): AttackStatus {\n        if (this.direction) {\n            if (position.x === this.position.x &&\n                this.position.y <= position.y &&\n                position.y <= this.position.y + this.length - 1) {\n                this.addPointToInjuredPositions(position);           \n            } else\n                return AttackStatus.miss;\n        } else {\n            if (position.y === this.position.y &&\n                this.position.x <= position.x &&\n                position.x <= this.position.x + this.length - 1) {\n                this.addPointToInjuredPositions(position);\n            } else\n                return AttackStatus.miss;\n        }\n        return this.isDead() ? AttackStatus.killed : AttackStatus.shot;\n    }\n    public addPointToInjuredPositions(point: Position) {\n        if (!this.injuredPositions.find(pos => pos.x === point.x && pos.y === point.y))\n            this.injuredPositions.push(point);\n    }\n    public isDead(): boolean {\n        return this.length === this.injuredPositions.length;\n    }\n    public getShipType() {\n        return this.type;\n    }\n    public getPosition() {\n        return this.position;\n    }\n    public getDirection() {\n        return this.direction;\n    }\n    public getLength() {\n        return this.length;\n    }\n    public getType() {\n        return this.type;\n    }\n}\n\nexport class GameBoard {\n    private ships: Ship[];\n    constructor() {\n        this.ships = [];\n    }\n    public addShips(ships: Ship[]) {\n        this.ships = ships || [];\n    }\n    public getShipsNumber() {\n        return this.ships.length;\n    }\n    public getShips() {\n        return this.ships;\n    }\n    public attack(position: Position): AttackStatus {\n        let attackStatus: AttackStatus = AttackStatus.miss;\n        for (let ship of this.ships) {\n            attackStatus = ship.attack(position);\n            if (attackStatus !== AttackStatus.miss)\n                break;\n        }\n        return attackStatus;\n    }\n    public ifAllShipsAreDead() {\n        return !this.ships.find(ship => !ship.isDead());\n    }\n}\n\nexport interface UserInGame extends IdentifiedUser {\n    userGameId: string,\n    gameBoard: GameBoard;\n}\n\nexport type Game = {\n    id: string,\n    users: UserInGame[],\n    currentPlayer: UserInGame | undefined,\n    winner: UserInGame | undefined,\n}\n\nexport type Room = {\n    id: string,\n    users: IdentifiedUser[];\n    game: Game | null;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"node:events\");","import { EventEmitter } from \"node:events\";\n\nclass Lock {\n  private _locked: boolean;\n  private _ee: any;\n\n  constructor() {\n    this._locked = false;\n    this._ee = new EventEmitter();\n  }\n\n  public acquire() {\n    return new Promise<void>((resolve) => {\n      // If nobody has the lock, take it and resolve immediately\n      if (!this._locked) {\n        // Safe because JS doesn't interrupt you on synchronous operations,\n        // so no need for compare-and-swap or anything like that.\n        this._locked = true;\n        return resolve();\n      }\n      // Otherwise, wait until somebody releases the lock and try again\n      const tryAcquire = () => {\n        if (!this._locked) {\n          this._locked = true;\n          this._ee.removeListener(\"release\", tryAcquire);\n          return resolve();\n        }\n      };\n      this._ee.on(\"release\", tryAcquire);\n    });\n  }\n\n  public release() {\n    // Release the lock immediately\n    this._locked = false;\n    setImmediate(() => this._ee.emit(\"release\"));\n  }\n}\n\nexport default Lock;\n","import { v4 as uuidv4  } from 'uuid';\nimport WebSocket from 'ws';\nimport { IdentifiedUser, Room, Game, GameBoard, UserInGame, Ship, Position, AttackStatus } from './dto.js';\nimport Lock from './lock.js';\n\nclass DB {\n    private users: IdentifiedUser[] = [];\n    private rooms: Room[] = [];\n    private lock: Lock = new Lock();\n\n    constructor() {}\n\n    public addUser(login: string, password: string, ws: WebSocket | undefined): string | undefined {\n        this.lock.acquire();\n        try {\n            const userWithTheSameLogin = this.users.find(user => user.login === login);\n            if (userWithTheSameLogin) {\n                if (userWithTheSameLogin.isAlive || userWithTheSameLogin.password !== password)\n                    return undefined;\n                userWithTheSameLogin.isAlive = true;\n                userWithTheSameLogin.ws = ws;\n                userWithTheSameLogin.lastRequestDateTime = new Date();\n                return userWithTheSameLogin.id;\n            }\n            const userId = uuidv4();\n            this.users.push({\n                id: userId,\n                login,\n                password,\n                isAlive: true,\n                lastRequestDateTime: new Date(),\n                wins: 0,\n                ws,\n            });\n            return userId;\n        } finally {\n            this.lock.release();\n        }\n    }\n\n    public createRoom(): string {\n        const roomId = uuidv4();\n        this.rooms.push({\n            id: roomId,\n            users: [],\n            game: null,\n        });\n        return roomId;\n    }\n\n    public addUserToRoom(userId: string, roomId: string) {\n        const room = this.rooms.find(el => el.id === roomId);\n        if (!room)\n            return;\n        const user = this.getUser(userId);\n        if (!user)\n            return;\n        if (room.users.length === 2)\n            return;\n        if (room.users.find(user => user.id === userId))\n            return;\n        room.users.push(user);\n    }\n\n    public createGame(roomId: string): Game | null {\n        const room = this.rooms.find(room => room.id === roomId);\n        if (!room)\n            return null;\n        if (room.users.length < 2)\n            return null;\n        const usersInGame: UserInGame[] = room.users.map(user => {\n            return {\n                ...user,\n                userGameId: uuidv4(),\n                gameBoard: new GameBoard(),\n            };\n        });\n        const game: Game = {\n            id: uuidv4(),\n            users: usersInGame,\n            currentPlayer: usersInGame[0],\n            winner: undefined,\n        };\n        room.game = game;\n        return game;\n    }\n\n    public setUserAlive(userId: string) {\n        const user = this.users.find(el => el.id === userId);\n        if (user) {\n            user.isAlive = true;\n            user.lastRequestDateTime = new Date();\n        }\n    }\n\n    public setUserDisconnected(userId: string) {\n        const user = this.users.find(el => el.id === userId);\n        if (!user)\n            return;\n        user.isAlive = false;\n        // getting user room\n        const userActiveRoomIndex = this.rooms.findIndex(room => room.users.find(el => el.id === userId));\n        if (userActiveRoomIndex === -1)\n            return;\n        // deleting disconnected user from room\n        this.rooms[userActiveRoomIndex].users = this.rooms[userActiveRoomIndex].users.filter(el => el.id !== userId);\n        if (!this.rooms[userActiveRoomIndex].users.length) {\n            // deleting room if there are no users in it\n            this.rooms.splice(userActiveRoomIndex, 1);\n        } else {\n            // getting game that user room belongs to\n            const game = this.rooms[userActiveRoomIndex].game;\n            if (game) {\n                // setting the other player as a winner in a game\n                const gameWinner = (game as Game).users.find(el => el.id !== userId);\n                if (gameWinner)\n                    this.setGameWinner(game as Game, gameWinner);\n                // deleting game\n                this.rooms[userActiveRoomIndex].game = null;\n            }\n        }\n    }\n\n    public getUser(userId: string): IdentifiedUser | undefined {\n        return this.users.find(el => el.id === userId);\n    }\n\n    public getAllUsers(): IdentifiedUser[] {\n        return this.users;\n    }\n\n    public getRoom(roomId: string): Room | undefined {\n        return this.rooms.find(el => el.id === roomId);\n    }\n\n    public getUserLogin(userId: string): string {\n        return this.users.find(el => el.id === userId)?.login || '?';\n    }\n\n    public getAllAvailableRooms(): Room[] {\n        return this.rooms.filter(room => room.users.length < 2);\n    }\n\n    public getAllRooms(): Room[] {\n        return this.rooms;\n    }\n\n    public getGame(gameId: string): Game | null | undefined {\n        return this.rooms.find(room => room.game?.id === gameId)?.game;\n    }\n\n    public getUserGame(userId: string): Game | null | undefined {\n        // userId - not a userGameId!\n        return this.rooms.find(room => room.game?.users.find(el => el.id === userId))?.game;\n    }\n\n    public addUserShips(gameId: string, playerId: string, ships: Ship[]): string | null {\n        const room = this.rooms.find(room => room.game?.id === gameId);\n        if (!room)\n            return null;\n        const gameUser = room.game?.users.find(user => user.userGameId === playerId);\n        if (!gameUser)\n            return null;\n        gameUser.gameBoard.addShips(ships);\n        return gameId;\n    }\n\n    private setGameWinner(game: Game, gameUser: UserInGame) {\n        game.winner = gameUser;\n        const user = this.users.find(user => user.id === gameUser.id);\n        if (user)\n            user.wins += 1;\n    }\n\n    public attack(gameId: string, currentPlayerId: string, position: Position) {\n        const game = this.rooms.find(room => room?.game?.id === gameId)?.game;\n        if (!game)\n            return null;\n        if (game.currentPlayer?.userGameId !== currentPlayerId)\n            return null;\n        const gameUser = game.users.find(user => user.userGameId === currentPlayerId);\n        if (!gameUser)\n            return null;\n        const nextGameUser = game.users.find(user => user.userGameId !== currentPlayerId);            \n        if (!nextGameUser)\n            return null;\n        const attackStatus: AttackStatus = nextGameUser.gameBoard.attack(position);\n        if (attackStatus === AttackStatus.killed) {\n            if (nextGameUser?.gameBoard.ifAllShipsAreDead())\n                this.setGameWinner(game, gameUser);\n        }\n        if (!game.winner) {\n            if (attackStatus === AttackStatus.miss)\n                game.currentPlayer = nextGameUser;\n        }\n        return {\n            attackStatus,\n            gameOver: game.winner ? true : false,\n        };\n    }\n\n    public deleteNonAliveUsers(lastAliveDate: Date) {\n        this.lock.acquire();\n        try {\n            for (let i = 0; i < this.users.length; i++) {\n                const user = this.users[i];\n                if (!user.isAlive && user.lastRequestDateTime <= lastAliveDate)\n                    this.users.splice(i, 1);\n            }\n        } finally {\n            this.lock.release();\n        }\n    }\n}\n\nexport default DB;\n","export enum UserMessageTypes {\n    reg = 'reg',\n    add_user_to_room = 'add_user_to_room',\n    create_room = 'create_room',\n\n    add_ships = 'add_ships',\n    attack = 'attack',\n    randomAttack = 'randomAttack',\n\n    single_play = 'single_play',\n}\n\nexport enum ServerMessageTypes {\n    // personal response\n    reg = 'reg',\n\n    // responses for the game room\n    create_game = 'create_game',\n    start_game = 'start_game',\n    turn = 'turn',\n    attack = 'attack',\n    finish = 'finish',\n    diconnect = 'diconnect',\n\n    // responses for all\n    update_room = 'update_room',\n    update_winners = 'update_winners',\n}\n\nexport type UserMessage = {\n    type: string;\n    data: any;\n    id: number;\n}\n\nexport type ServerMessage = {\n    type: string;\n    data: any;\n    id: number;\n}\n\nexport class UserWSData {\n    private clientIP: string;\n    private userId: string;\n    constructor(clientIP: string | undefined, userId: string | undefined) {\n        this.setClientIP(clientIP);\n        this.setUserID(userId);\n    }\n    public setClientIP(clientIP: string | undefined) {\n        this.clientIP = clientIP || '?';\n    }\n    public setUserID(userId: string | undefined) {\n        this.userId = userId || '';\n    }\n    public getClientIP() {\n        return this.clientIP;\n    }\n    public getUserID() {\n        return this.userId;\n    }\n}\n","import WebSocket from 'ws';\nimport DB from '@db/index';\nimport { UserMessage } from '@websocket_server/dto';\n\nfunction processRegMessage(userMessage: UserMessage, db: DB, ws: WebSocket | undefined): string | undefined {\n    const userAuthData = JSON.parse(userMessage?.data) || { name: 'undefined', password: 'undefined' };\n    return db.addUser(userAuthData.name, userAuthData.password, ws);\n}\n\nexport default processRegMessage;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index.js';\n\nfunction sendUpdateWinnersMessages(db: DB) {\n    const users = db.getAllUsers();\n    if (!users?.length) return;\n    users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.update_winners,\n            data: users.map(user => ({\n                name: user.login,\n                wins: user.wins,\n            })),\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendUpdateWinnersMessages;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendUpdateRoomMessages(db: DB) {\n    const rooms = db.getAllAvailableRooms();\n    if (!rooms?.length) return;\n    const users = db.getAllUsers();\n    if (!users?.length) return;\n    rooms.forEach(room => {\n        const messageToUser = {\n            type: ServerMessageTypes.update_room,\n            data: [\n                {\n                    roomId: room.id,\n                    roomUsers: room.users\n                        .map(user => ({\n                            name: user.login,\n                            index: user.login,\n                        })),\n                },\n            ],\n            id: 0,\n        };\n        users.forEach(user => { if (user.ws) user.ws.send(JSON.stringify(messageToUser)); });\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendUpdateRoomMessages;\n","import DB from '@db/index';\n\nfunction processCreateRoomMessage(userId: string, db: DB) {\n    const roomId = db.createRoom();\n    db.addUserToRoom(userId, roomId);\n    return roomId;\n}\n\nexport default processCreateRoomMessage;\n","import DB from '@db/index';\nimport { UserMessage } from '@websocket_server/dto';\nimport { Position } from '@db/dto';\n\nfunction processAttackMessage(userMessage: UserMessage, db: DB) {\n    const userMessageData = JSON.parse(userMessage?.data) || {};\n    const gameId = userMessageData.gameId;\n    const playerId = userMessageData.indexPlayer;\n    const position: Position = {\n        x: userMessageData.x,\n        y: userMessageData.y,\n    };\n    const attackResult = db.attack(gameId, playerId, position);\n    if (!attackResult)\n        return null;\n    return {\n        gameId: userMessageData.gameId,\n        playerId: userMessageData.indexPlayer,\n        position,\n        attackStatus: attackResult.attackStatus,\n        gameOver: attackResult.gameOver,\n    };\n}\n\nexport default processAttackMessage;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendTurnMessages(gameId: string, db: DB) {\n    const game = db.getGame(gameId);\n    if (!game) return;\n    game.users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.turn,\n            data: JSON.stringify({\n                currentPlayer: game.currentPlayer?.userGameId,\n            }),\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendTurnMessages;\n","import DB from '@db/index';\nimport { UserMessage, UserMessageTypes } from '@websocket_server/dto';\nimport processAttackMessage from './processAttackMessage';\n\n// returns random number from 0 to max-1\nfunction getRandomInt(max: number) {\n    return Math.floor(Math.random() * max);\n}\n\nfunction processRandomAttackMessage(userMessage: UserMessage, db: DB) {\n    const userMessageData = JSON.parse(userMessage?.data) || {};\n    const gameId = userMessageData.gameId;\n    const playerId = userMessageData.indexPlayer;\n    const randomX = getRandomInt(10);\n    const randomY = getRandomInt(10);\n    const message: UserMessage = {\n        type: UserMessageTypes.attack,\n        data: JSON.stringify({\n            gameId,\n            x: randomX,\n            y: randomY,\n            indexPlayer: playerId,\n        }),\n        id: 0,\n    };\n    return processAttackMessage(message, db);\n}\n\nexport default processRandomAttackMessage;\n","import WebSocket from 'ws';\nimport { ServerMessage } from '@websocket_server/dto';\nimport Bot from '../bot';\nimport sendAddUserToRoomMessage from '../messages_to_server/sendAddUserToRoomMessage';\n\nfunction processUpdateRoomMessage(bot: Bot, message: ServerMessage, socket: WebSocket) {\n    const serverMessageData = message?.data;\n    const roomId = serverMessageData[0].roomId;\n    if (bot && !bot.getRoomId()) {\n        bot?.setRoomId(roomId);\n        sendAddUserToRoomMessage(bot, socket);\n    }\n}\n\nexport default processUpdateRoomMessage;\n","import WebSocket from 'ws';\nimport { UserMessageTypes } from '@websocket_server/dto';\nimport Bot from '../bot';\n\nfunction sendAddUserToRoomMessage(bot: Bot, ws: WebSocket) {\n    if (!bot) return;\n    const messageToServer = {\n        type: UserMessageTypes.add_user_to_room,\n        data: JSON.stringify({ indexRoom: bot.getRoomId() }),\n        id: 0,\n    };\n    if (ws)\n        ws.send(JSON.stringify(messageToServer));\n    console.log(`Sending message to server from Bot:\\r\\n${JSON.stringify(messageToServer)}`);\n}\n\nexport default sendAddUserToRoomMessage;\n","import WebSocket from 'ws';\nimport { ServerMessage } from '@websocket_server/dto';\nimport Bot from '../bot';\nimport sendAttackMessage from '../messages_to_server/sendAttackMessage';\n\nfunction processTurnMessage(bot: Bot, message: ServerMessage, socket: WebSocket) {\n    const serverMessageData = JSON.parse(message?.data);\n    const currentPlayer = serverMessageData.currentPlayer;\n    if (currentPlayer === bot.getPlayerId()) {\n        bot.fire();\n        sendAttackMessage(bot, socket);\n    }\n}\n\nexport default processTurnMessage;\n","import WebSocket from 'ws';\nimport { UserMessageTypes } from '@websocket_server/dto';\nimport Bot from '../bot';\nimport { Position } from '@db/dto';\n\nfunction sendAttackMessage(bot: Bot, ws: WebSocket) {\n    const shot: Position | null = bot?.getShot();\n    if (!shot) return;\n    const messageToServer = {\n        type: UserMessageTypes.attack,\n        data: JSON.stringify({\n            gameId: bot.getGameId(),\n            x: shot.x,\n            y: shot.y,\n            indexPlayer: bot.getPlayerId(),\n        }),\n        id: 0,\n    };\n    if (ws)\n        ws.send(JSON.stringify(messageToServer));\n    console.log(`Sending message to server from Bot:\\r\\n${JSON.stringify(messageToServer)}`);\n}\n\nexport default sendAttackMessage;\n","import WebSocket from 'ws';\nimport { ServerMessage, ServerMessageTypes} from '@websocket_server/dto';\nimport processUpdateRoomMessage from './messages_from_server/processUpdateRoomMessage';\nimport sendAddShipsMessage from './messages_to_server/sendAddShipsMessage';\nimport processCreateGameMessage from './messages_from_server/processCreateGameMessage';\nimport processTurnMessage from './messages_from_server/processTurnMessage';\nimport Bot from './bot';\n\nfunction processServerMessage(serverMessage: any, socket: WebSocket, bot: Bot | null) {\n    if (!serverMessage || !bot) return;\n    const messageObject: ServerMessage = JSON.parse(serverMessage);\n    switch (messageObject.type) {\n        case ServerMessageTypes.reg:\n            bot.setUserId(messageObject.data.index); // messageData.index - bot id\n            break;\n        case ServerMessageTypes.update_room:\n            processUpdateRoomMessage(bot, messageObject, socket);\n            break;\n        case ServerMessageTypes.create_game:\n            processCreateGameMessage(bot, messageObject);\n            bot.generateRandomShipMap(); console.log(bot.map); console.log(bot.ships)\n            sendAddShipsMessage(bot, socket);\n            break;\n        case ServerMessageTypes.turn:\n            processTurnMessage(bot, messageObject, socket);\n            break;\n        case ServerMessageTypes.finish:\n            socket.close();\n            break;\n        default:\n            break;\n    }\n}\n\nexport default processServerMessage;\n","import { ServerMessage } from '@websocket_server/dto';\nimport Bot from '../bot';\n\nfunction processCreateGameMessage(bot: Bot, message: ServerMessage) {\n    const serverMessageData = message?.data;\n    const gameId = serverMessageData.idGame;\n    const playerId = serverMessageData.idPlayer;\n    bot.setGameId(gameId);\n    bot.setPlayerId(playerId);\n}\n\nexport default processCreateGameMessage;\n","import WebSocket from 'ws';\nimport { UserMessageTypes } from '@websocket_server/dto';\nimport Bot from '../bot';\n\nfunction sendAddShipsMessage(bot: Bot, ws: WebSocket) {\n    const messageToServer = {\n        type: UserMessageTypes.add_ships,\n        data: JSON.stringify({\n            gameId: bot.getGameId(),\n            ships: bot.ships.map(ship => ({\n                position: {\n                    x: ship.getPosition().x,\n                    y: ship.getPosition().y,\n                },\n                direction: ship.getDirection(),\n                length: ship.getLength(),\n                type: ship.getType(),\n            })),\n            indexPlayer: bot.getPlayerId(),\n        }),\n        id: 0,\n    };\n    if (ws)\n        ws.send(JSON.stringify(messageToServer));\n    console.log(`Sending message to server from Bot:\\r\\n${JSON.stringify(messageToServer)}`);\n}\n\nexport default sendAddShipsMessage;\n","import { Position, Ship, ShipType } from '@db/dto';\n\ntype ShipConfiguration = {\n    maxShips: number,\n    pointCount: number,\n    type: ShipType,\n}\n\nclass Bot {\n    private userId: string = '';\n    private roomId: string = '';\n    private gameId: string = '';\n    private playerId: string = '';\n\n    private gameFieldBorderX = ['A','B','C','D','E','F','G','H','I','J'];\n    private gameFieldBorderY = ['1','2','3','4','5','6','7','8','9','10'];\n    private shipsConfiguration: ShipConfiguration[] = [\n        { maxShips: 1, pointCount: 4, type: ShipType.huge },\n        { maxShips: 2, pointCount: 3, type: ShipType.large },\n        { maxShips: 3, pointCount: 2, type: ShipType.medium },\n        { maxShips: 4, pointCount: 1, type: ShipType.small },\n    ];\n\n    private _hitsForWin = 0;\n\n    private CELL_WITH_SHIP = 1;\n    private CELL_EMPTY = 0;\n\n    constructor(userId: string = '') {\n        this.userId = userId;\n        for (let i = 0; i < this.shipsConfiguration.length; i++) {\n            this._hitsForWin = +this._hitsForWin + (this.shipsConfiguration[i].maxShips*this.shipsConfiguration[i].pointCount);\n        }\n        this.generateShotMap(); \n    }\n\n    public setUserId(value: string) {\n        this.userId = value;\n    }\n\n    public getUserId() {\n        return this.userId;\n    }\n\n    public setRoomId(value: string) {\n        this.roomId = value;\n        this.addedToRoom = true;\n    }\n\n    public getRoomId() {\n        return this.roomId;\n    }\n\n    public setGameId(value: string) {\n        this.gameId = value;\n    }\n\n    public getGameId() {\n        return this.gameId;\n    }\n\n    public setPlayerId(value: string) {\n        this.playerId = value;\n    }\n\n    public getPlayerId() {\n        return this.playerId;\n    }\n    \n    public addedToRoom: boolean = false;\n    public ships: Ship[] = [];\n    public map: number[][] = [];\n    private shotMap: Position[] = [];\n\n    /**\n     * Генерирует массив содержащий информацию о том есть или нет корабли\n     */\n    public generateRandomShipMap() {\n        // генерация карты расположения, включающей отрицательный координаты\n        // для возможности размещения у границ\n        for (let yPoint = -1; yPoint < (this.gameFieldBorderY.length + 1); yPoint++) {\n            for (let xPoint = -1; xPoint < (this.gameFieldBorderX.length + 1); xPoint++) {\n                if (!this.map[yPoint]) {\n                    this.map[yPoint] = [];\n                }\n                this.map[yPoint][xPoint] = this.CELL_EMPTY;\n            }\n        }\n        // получение копии настроек кораблей для дальнейших манипуляций\n        const shipsConfiguration = JSON.parse(JSON.stringify(this.shipsConfiguration));\n        let allShipsPlaced = false;\n        while (allShipsPlaced === false){\n            let xPoint = this.getRandomInt(0, this.gameFieldBorderX.length);\n            let yPoint = this.getRandomInt(0, this.gameFieldBorderY.length);\n            if (this.isPointFree(this.map, xPoint, yPoint) === true) {\n                if (this.canPutHorizontal(this.map, xPoint, yPoint, shipsConfiguration[0].pointCount, this.gameFieldBorderX.length)) {\n                    this.ships.push(new Ship({ x: xPoint, y: yPoint }, false, shipsConfiguration[0].pointCount, shipsConfiguration[0].type));\n                    for (let i = 0; i < shipsConfiguration[0].pointCount; i++) {\n                        this.map[yPoint][xPoint + i] = this.CELL_WITH_SHIP;\n                    }\n                } else if (this.canPutVertical(this.map, xPoint, yPoint, shipsConfiguration[0].pointCount, this.gameFieldBorderY.length)) {\n                    this.ships.push(new Ship({ x: xPoint, y: yPoint }, true, shipsConfiguration[0].pointCount, shipsConfiguration[0].type));\n                    for (let i = 0; i < shipsConfiguration[0].pointCount; i++) {\n                        this.map[yPoint + i][xPoint] = this.CELL_WITH_SHIP;\n                    }\n                } else {\n                    continue;\n                }\n                // обновление настроек кораблей, если цикл не был пропущен\n                // и корабль, стало быть, расставлен\n                shipsConfiguration[0].maxShips--;\n                if (shipsConfiguration[0].maxShips < 1){\n                    shipsConfiguration.splice(0, 1);\n                }\n                if (shipsConfiguration.length === 0){\n                    allShipsPlaced = true;\n                }\n            }\n        }\n    }\n\n    private getRandomInt(min: number, max: number): number {\n        return Math.floor(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * Проверка, возможно ли разместить тут однопалубный корабль\n     */\n    private isPointFree(map: number[][], xPoint: number, yPoint: number): boolean {\n        // текущая и далее по часовй стрелке вокруг\n        if (map[yPoint][xPoint] === this.CELL_EMPTY\n            && map[yPoint-1][xPoint] === this.CELL_EMPTY\n            && map[yPoint-1][xPoint+1] === this.CELL_EMPTY\n            && map[yPoint][xPoint+1] === this.CELL_EMPTY\n            && map[yPoint+1][xPoint+1] === this.CELL_EMPTY\n            && map[yPoint+1][xPoint] === this.CELL_EMPTY\n            && map[yPoint+1][xPoint-1] === this.CELL_EMPTY\n            && map[yPoint][xPoint-1] === this.CELL_EMPTY\n            && map[yPoint-1][xPoint-1] === this.CELL_EMPTY\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Возможность вставки корабля горизонтально\n     */\n    private canPutHorizontal(map: number[][], xPoint: number, yPoint: number, shipLength: number, coordLength: number) {\n        let freePoints = 0;\n        for (let x = xPoint; x < coordLength; x++) {\n            // текущая и далее по часовй стрелке в гориз направл\n            if (map[yPoint][x] === this.CELL_EMPTY\n                && map[yPoint-1][x] === this.CELL_EMPTY\n                && map[yPoint-1][x+1] === this.CELL_EMPTY\n                && map[yPoint][x+1] === this.CELL_EMPTY\n                && map[yPoint+1][x+1] === this.CELL_EMPTY\n                && map[yPoint+1][x] === this.CELL_EMPTY\n            ) {\n                freePoints++;\n            } else {\n                break;\n            }\n        }\n        return freePoints >= shipLength;\n    }\n\n    /**\n     * Возможно ли вставить корабль вертикально\n     */\n    private canPutVertical(map: number[][], xPoint: number, yPoint: number, shipLength: number, coordLength: number) {\n        let freePoints = 0;\n        for (let y = yPoint; y < coordLength; y++) {\n            // текущая и далее по часовй стрелке в вертикальном направлении\n            if (map[y][xPoint] === this.CELL_EMPTY\n                && map[y+1][xPoint] === this.CELL_EMPTY\n                && map[y+1][xPoint+1] === this.CELL_EMPTY\n                && map[y+1][xPoint] === this.CELL_EMPTY\n                && map[y][xPoint-1] === this.CELL_EMPTY\n                && map[y-1][xPoint-1] === this.CELL_EMPTY\n            ) {\n                freePoints++;\n            } else {\n                break;\n            }\n        }\n        return freePoints >= shipLength;\n    }\n\n    /**\n     * Создает масив с координатами полей, из которых компьютер\n     * случайно выбирает координаты для обстрела\n     */\n    private generateShotMap() {\n        for (let yPoint = 0; yPoint < this.gameFieldBorderY.length; yPoint++) {\n            for (let xPoint = 0; xPoint < this.gameFieldBorderX.length; xPoint++) {\n                this.shotMap.push({ y: yPoint, x: xPoint });\n            }\n        }\n    }\n\n    private shot: Position | null = null;\n\n    public getShot() {\n        return this.shot;\n    }\n\n    /**\n     * Выстрел компьютера\n     */\n    public fire(){\n        // берется случайный выстрел из сгенерированной ранее карты\n        const randomShotIndex = this.getRandomInt(0, this.shotMap.length);\n        this.shot = this.shotMap[randomShotIndex];\n        // удаление чтобы не было выстрелов повторных\n        this.shotMap.splice(randomShotIndex, 1);\n        return this.shot;\n    }\n}\n\nexport default Bot;\n","import WebSocket from 'ws';\nimport processServerMessage from './processServerMessage';\nimport sendRegMessage from './messages_to_server/sendRegMessage';\nimport Bot from './bot';\n\nconst WSS_PORT = process.env.WSS_PORT;\n\n// playerId - the id of the real player to play with\nexport function startBotWebsocket(playerId: string) {\n    let socket: WebSocket | null;\n    let bot: Bot = new Bot();\n\n    socket = new WebSocket(`ws://localhost:${WSS_PORT}`);\n\n    socket.onopen = function() {\n        console.log('Bot successfully created');\n        if (socket)\n            sendRegMessage(socket, playerId);\n    };\n    \n    socket.onclose = function() {\n        socket = null;\n    };\n\n    socket.onmessage = function(event) {\n        console.log(`Bot received data: ${event.data}`);\n        if (socket)\n            processServerMessage(event.data, socket, bot);\n    };\n\n    socket.onerror = function(error) {\n        console.log(`Bot socket error: ${error.message}`);\n    };\n}\n","import WebSocket from 'ws';\nimport { UserMessageTypes, UserMessage, UserWSData } from '@websocket_server/dto';\nimport DB from '@db/index';\nimport processRegMessage from './messages_from_user/processRegMessage';\nimport sendRegMessage from './messages_to_user/sendRegMessage';\nimport sendUpdateWinnersMessages from './messages_to_user/sendUpdateWinnersMessages';\nimport sendUpdateRoomMessages from './messages_to_user/sendUpdateRoomMessages';\nimport processCreateRoomMessage from './messages_from_user/processCreateRoomMessage';\nimport processAddUserToRoomMessage from './messages_from_user/processAddUserToRoomMessage';\nimport sendCreateGameMessages from './messages_to_user/sendCreateGameMessages';\nimport processAddShipsMessage from './messages_from_user/processAddShipsMessage';\nimport sendStartGameMessages from './messages_to_user/sendStartGameMessages';\nimport processAttackMessage from './messages_from_user/processAttackMessage';\nimport sendTurnMessages from './messages_to_user/sendTurnMessages';\nimport sendFinishMessages from './messages_to_user/sendFinishMessages';\nimport sendAttackMessages from './messages_to_user/sendAttackMessages';\nimport processRandomAttackMessage from './messages_from_user/processRandomAttackMessage';\nimport { startBotWebsocket } from '@websocket_client_bot/index';\n\nfunction processAttackResult(processAttackMessageResult: any, db: DB) {\n    if (!processAttackMessageResult)\n        return;\n    sendAttackMessages(\n        processAttackMessageResult.gameId,\n        processAttackMessageResult.playerId, // player that made a shot\n        processAttackMessageResult.position,\n        processAttackMessageResult.attackStatus,\n        db\n    );\n    if (!processAttackMessageResult.gameOver) {\n        sendTurnMessages(processAttackMessageResult.gameId, db);\n    } else {\n        sendFinishMessages(processAttackMessageResult.gameId, db);\n        sendUpdateWinnersMessages(db);\n    }\n}\n\nfunction processUserMessage(userWSData: UserWSData, data: any, db: DB, ws: WebSocket) {\n    const userMessage: UserMessage = JSON.parse(data.toString());\n    console.log(`Received command \\x1b[33m${userMessage.type}\\x1b[0m from user at ${userWSData.getClientIP()} (id = ${userWSData.getUserID()})`);\n    switch(userMessage.type) {\n        case UserMessageTypes.reg:\n            const userId = processRegMessage(userMessage, db, ws);\n            if (!userId) return;\n            userWSData.setUserID(userId);\n            sendRegMessage(userId, db, ws);\n            sendUpdateRoomMessages(db);\n            sendUpdateWinnersMessages(db);\n            break;\n        case UserMessageTypes.create_room:\n            processCreateRoomMessage(userWSData.getUserID(), db);\n            sendUpdateRoomMessages(db);\n            break;\n        case UserMessageTypes.add_user_to_room:\n            const roomId = processAddUserToRoomMessage(userWSData.getUserID(), userMessage, db);\n            sendUpdateRoomMessages(db);\n            sendCreateGameMessages(roomId, db);\n            break;\n        case UserMessageTypes.add_ships:\n            const gameId = processAddShipsMessage(userMessage, db);\n            if (!gameId)\n                return;\n            if (db.getGame(gameId)?.users.length === 2) {\n                sendStartGameMessages(gameId, db);\n                sendTurnMessages(gameId, db);\n            }\n            break;\n        case UserMessageTypes.attack:\n            const processAttackMessageResult = processAttackMessage(userMessage, db);\n            processAttackResult(processAttackMessageResult, db);\n            break;\n        case UserMessageTypes.randomAttack:\n            const processRandomAttackMessageResult = processRandomAttackMessage(userMessage, db);\n            processAttackResult(processRandomAttackMessageResult, db);\n            break;\n        case UserMessageTypes.single_play:\n            startBotWebsocket(userWSData.getUserID());\n            processCreateRoomMessage(userWSData.getUserID(), db);\n            sendUpdateRoomMessages(db);\n            break;\n        default:\n            console.log(`Unknown user message type: \\x1b[31m${userMessage.type}\\x1b[0m`);\n            break;\n    }\n}\n\nexport default processUserMessage;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\nimport { Position, AttackStatus } from '@db/dto';\n\nfunction sendAttackMessages(gameId: string, playerId: string, position: Position, status: AttackStatus, db: DB) {\n    const game = db.getGame(gameId);\n    if (!game) return;\n    game.users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.attack,\n            data: JSON.stringify({\n                position,\n                currentPlayer: playerId, // player that made a shot\n                status,\n            }),\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendAttackMessages;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendFinishMessages(gameId: string, db: DB) {\n    const game = db.getGame(gameId);\n    if (!game) return;\n    game.users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.finish,\n            data: {\n                winPlayer: game.winner?.userGameId,\n            },\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendFinishMessages;\n","import WebSocket from 'ws';\nimport { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendRegMessage(userId: string, db: DB, ws: WebSocket) {\n    const messageToUser = {\n        type: ServerMessageTypes.reg,\n        data: {\n            name: db.getUserLogin(userId),\n            index: userId,\n            error: false,\n            errorText: '',\n        },\n        id: 0,\n    };\n    if (ws)\n        ws.send(JSON.stringify(messageToUser));\n    console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n}\n\nexport default sendRegMessage;\n","import DB from '@db/index';\nimport { UserMessage } from '@websocket_server/dto';\n\nfunction processAddUserToRoomMessage(userId: string, userMessage: UserMessage, db: DB) {\n    const userMessageData = JSON.parse(userMessage?.data) || {};\n    const roomId = userMessageData.indexRoom;\n    db.addUserToRoom(userId, roomId);\n    return roomId;\n}\n\nexport default processAddUserToRoomMessage;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendCreateGameMessages(roomId: string, db: DB) {\n    const game = db.createGame(roomId);\n    if (!game) return;\n    game.users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.create_game,\n            data: {\n                idGame: game.id,\n                idPlayer: user.userGameId,\n            },\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendCreateGameMessages;\n","import DB from '@db/index';\nimport { UserMessage } from '@websocket_server/dto';\nimport { Ship } from '@db/dto';\n\nfunction processAddShipsMessage(userMessage: UserMessage, db: DB) {\n    const userGameData = JSON.parse(userMessage?.data) || {};\n    const userShips = userGameData.ships?.map((shipData: any) => {\n        return new Ship(shipData.position, shipData.direction, shipData.length, shipData.type);\n    });\n    const gameId = db.addUserShips(userGameData.gameId, userGameData.indexPlayer, userShips);\n    return gameId;\n}\n\nexport default processAddShipsMessage;\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendStartGameMessages(gameId: string, db: DB) {\n    const game = db.getGame(gameId);\n    if (!game) return;\n    if (game.users.find(user => !user.gameBoard.getShipsNumber())) return;\n    game.users.forEach(user => {\n        const messageToUser = {\n            type: ServerMessageTypes.start_game,\n            data: JSON.stringify({\n                ships: user.gameBoard.getShips(),\n                currentPlayerIndex: user.userGameId,\n            }),\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendStartGameMessages;\n","import WebSocket from 'ws';\nimport { UserMessageTypes } from '@websocket_server/dto';\n\nfunction sendRegMessage(ws: WebSocket, playerId: string) {\n    const messageToServer = {\n        type: UserMessageTypes.reg,\n        data: JSON.stringify({\n            name: 'bot' + playerId.slice(0, 7),\n            index: 'bot' + playerId,\n        }),\n        id: 0,\n    };\n    if (ws)\n        ws.send(JSON.stringify(messageToServer));\n    console.log(`Sending message to server from Bot:\\r\\n${JSON.stringify(messageToServer)}`);\n}\n\nexport default sendRegMessage;\n","import { httpServer } from './src/http_server/index';\nimport { startWebSocketServer } from './src/websocket_server/index';\n\nconst HTTP_PORT = process.env.HTTP_PORT;\n\nconsole.log(`Start static http server on port ${HTTP_PORT}`);\nhttpServer.listen(HTTP_PORT);\n\nconst WSS_PORT = process.env.WSS_PORT;\n\nconsole.log(`Start WebSocket server on port ${WSS_PORT}`);\nstartWebSocketServer(WSS_PORT);\n","import WebSocket, { WebSocketServer } from 'ws';\nimport { IncomingMessage } from 'http';\nimport DB from '@db/index';\nimport processUserMessage from './process_messages/index';\nimport sendDiconnectMessage from './process_messages/messages_to_user/sendDiconnectMessage';\nimport sendUpdateRoomMessages from './process_messages/messages_to_user/sendUpdateRoomMessages';\nimport sendUpdateWinnersMessages from './process_messages/messages_to_user/sendUpdateWinnersMessages';\nimport { UserWSData } from './dto';\n\nexport const startWebSocketServer = (port: any) => {\n    const webSocketServer = new WebSocketServer({\n        port,\n        clientTracking: true,\n    });\n\n    const db = new DB();\n\n    setInterval(() => {\n        const minutes = 1;\n        db.deleteNonAliveUsers(new Date((new Date()).getTime() - minutes * 60000));\n        sendUpdateWinnersMessages(db);\n    }, 10000);\n\n    webSocketServer.on('connection', (ws: WebSocket , req: IncomingMessage) => {\n        const userWSData = new UserWSData(req.socket.remoteAddress, '');\n        console.log(`New client connected from ${userWSData.getClientIP()}`);\n        console.log(`Total number of clients is ${webSocketServer.clients.size}`);\n       \n        ws.on('message', (data: any) => {\n            processUserMessage(userWSData, data, db, ws);\n            db.setUserAlive(userWSData.getUserID());\n        });\n\n        ws.on('close', () => {\n            sendDiconnectMessage(userWSData.getUserID(), db);\n            db.setUserDisconnected(userWSData.getUserID());\n            sendUpdateRoomMessages(db);\n            sendUpdateWinnersMessages(db);\n            console.log(`The client at ${userWSData.getUserID()} has disconnected`);\n        });\n\n        ws.on('onerror', (event: WebSocket.ErrorEvent) => {\n            console.log(`Error occurred: ${event.message}`);\n        });\n    });\n};\n\n\n","import { ServerMessageTypes } from '@websocket_server/dto';\nimport DB from '@db/index';\n\nfunction sendDiconnectMessage(disconnectedUserId: string, db: DB) {\n    const game = db.getUserGame(disconnectedUserId);\n    if (!game) return;\n    game.users.forEach(user => {\n        if (user.id === disconnectedUserId)\n            return;\n        const messageToUser = {\n            type: ServerMessageTypes.diconnect,\n            id: 0,\n        };\n        if (user.ws)\n            user.ws.send(JSON.stringify(messageToUser));\n        console.log(`Sending message:\\r\\n${JSON.stringify(messageToUser)}`);\n    });\n}\n\nexport default sendDiconnectMessage;\n"],"names":["EMPTY_BUFFER","_mask","source","mask","output","offset","length","i","_unmask","buffer","module","exports","concat","list","totalLength","target","Buffer","allocUnsafe","buf","set","slice","toArrayBuffer","byteLength","byteOffset","toBuffer","data","readOnly","isBuffer","ArrayBuffer","from","isView","unmask","process","env","WS_NO_BUFFER_UTIL","bufferUtil","e","BINARY_TYPES","alloc","GUID","kForOnEventAttribute","Symbol","kListener","kStatusCode","kWebSocket","NOOP","kCode","kData","kError","kMessage","kReason","kTarget","kType","kWasClean","Event","constructor","type","this","Object","defineProperty","prototype","enumerable","CloseEvent","options","super","undefined","code","reason","wasClean","ErrorEvent","error","message","MessageEvent","EventTarget","addEventListener","listener","wrapper","isBinary","event","toString","call","_closeFrameReceived","_closeFrameSent","once","on","removeEventListener","handler","listeners","removeListener","tokenChars","push","dest","name","elem","format","extensions","keys","map","extension","configurations","Array","isArray","params","k","values","v","join","parse","header","offers","create","extensionName","paramName","mustUnescape","isEscaping","inQuotes","start","end","charCodeAt","SyntaxError","value","replace","token","kDone","kRun","concurrency","pending","Infinity","jobs","add","job","shift","zlib","Limiter","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","zlibLimiter","deflateOnData","chunk","inflateOnData","_maxPayload","RangeError","reset","inflateOnError","err","_inflate","isServer","maxPayload","_options","_threshold","threshold","_isServer","_deflate","concurrencyLimit","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","accept","normalizeParams","acceptAsServer","acceptAsClient","cleanup","close","callback","Error","opts","accepted","find","response","forEach","key","num","Number","isInteger","TypeError","decompress","fin","done","_decompress","result","compress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","createInflateRaw","zlibInflateOptions","write","flush","_readableState","endEmitted","createDeflateRaw","zlibDeflateOptions","Z_SYNC_FLUSH","Writable","PerMessageDeflate","isValidStatusCode","isValidUTF8","ErrorCtor","prefix","statusCode","errorCode","captureStackTrace","_binaryType","binaryType","_extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","encoding","cb","startLoop","consume","n","dst","Uint8Array","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","compressed","haveLength","readUInt16BE","readUInt32BE","Math","pow","controlMessage","dataMessage","er","messageLength","fragments","emit","randomFillSync","applyMask","kByteLength","maskBuffer","Sender","socket","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_deflating","_queue","frame","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","ping","pong","send","perMessageDeflate","binary","_","destroyed","dequeue","Reflect","apply","cork","uncork","Duplex","emitClose","stream","duplexOnEnd","_writableState","finished","destroy","duplexOnError","listenerCount","ws","terminateOnDestroy","duplex","autoDestroy","objectMode","writableObjectMode","msg","pause","_destroy","readyState","CLOSED","nextTick","called","terminate","_final","CONNECTING","_read","isPaused","resume","protocols","Set","protocol","has","_isValidUTF8","len","WS_NO_UTF_8_VALIDATE","EventEmitter","http","createHash","subprotocol","WebSocket","keyRegex","server","socketOnError","abortHandshake","headers","STATUS_CODES","Connection","h","abortHandshakeOrEmitwsClientError","req","handleProtocols","clientTracking","verifyClient","noServer","backlog","host","path","port","_server","createServer","res","body","writeHead","listen","emitConnection","bind","_removeListeners","addListeners","listening","upgrade","head","handleUpgrade","clients","_shouldEmitClose","address","size","shouldHandle","index","url","indexOf","version","method","toLowerCase","test","secWebSocketProtocol","secWebSocketExtensions","info","origin","secure","authorized","encrypted","verified","completeUpgrade","readable","writable","update","digest","next","_protocol","setSocket","delete","https","net","tls","randomBytes","Readable","URL","Receiver","kAborted","protocolVersions","readyStates","subprotocolRegex","_closeCode","_closeMessage","_closeTimer","_paused","_readyState","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","includes","bufferedAmount","onclose","onerror","onopen","onmessage","_url","receiver","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setTimeout","setNoDelay","unshift","socketOnClose","socketOnData","socketOnEnd","OPEN","removeAllListeners","_req","CLOSING","errorEmitted","sendAfterClose","needDrain","websocket","protocolVersion","followRedirects","maxRedirects","createConnection","socketPath","hostname","timeout","parsedUrl","href","isSecure","isUnixSocket","invalidURLMessage","pathname","hash","emitErrorAndClose","defaultPort","request","protocolSet","tlsConnect","netConnect","startsWith","Upgrade","search","handshakeTimeout","Origin","username","password","auth","parts","split","_originalSecure","_originalHost","entries","isSameHost","authorization","cookie","location","addr","abort","serverProt","protError","extensionNames","connect","servername","isIP","setHeader","receiverOnFinish","read","clearTimeout","property","get","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","o","obj","prop","hasOwnProperty","httpServer","file_path","JSON","stringify","randomUUID","rnds8Pool","poolPtr","rng","byteToHex","rnds","random","arr","unsafeStringify","ShipType","AttackStatus","Ship","position","direction","injuredPositions","attack","x","y","miss","addPointToInjuredPositions","isDead","killed","shot","point","pos","getShipType","getPosition","getDirection","getLength","getType","GameBoard","ships","addShips","getShipsNumber","getShips","attackStatus","ship","ifAllShipsAreDead","_locked","_ee","acquire","Promise","resolve","tryAcquire","release","setImmediate","users","rooms","lock","addUser","login","userWithTheSameLogin","user","isAlive","lastRequestDateTime","Date","id","userId","wins","createRoom","roomId","game","addUserToRoom","room","el","getUser","createGame","usersInGame","userGameId","gameBoard","currentPlayer","winner","setUserAlive","setUserDisconnected","userActiveRoomIndex","findIndex","filter","gameWinner","setGameWinner","splice","getAllUsers","getRoom","getUserLogin","getAllAvailableRooms","getAllRooms","getGame","gameId","getUserGame","addUserShips","playerId","gameUser","currentPlayerId","nextGameUser","gameOver","deleteNonAliveUsers","lastAliveDate","UserMessageTypes","ServerMessageTypes","UserWSData","clientIP","setClientIP","setUserID","getClientIP","getUserID","db","messageToUser","update_winners","console","log","update_room","roomUsers","userMessage","userMessageData","indexPlayer","attackResult","turn","getRandomInt","max","floor","bot","serverMessageData","getRoomId","setRoomId","messageToServer","add_user_to_room","indexRoom","getPlayerId","fire","getShot","getGameId","serverMessage","messageObject","reg","setUserId","create_game","idGame","idPlayer","setGameId","setPlayerId","generateRandomShipMap","add_ships","finish","gameFieldBorderX","gameFieldBorderY","shipsConfiguration","maxShips","pointCount","huge","large","medium","small","_hitsForWin","CELL_WITH_SHIP","CELL_EMPTY","generateShotMap","getUserId","addedToRoom","shotMap","yPoint","xPoint","allShipsPlaced","isPointFree","canPutHorizontal","canPutVertical","min","shipLength","coordLength","freePoints","randomShotIndex","WSS_PORT","processAttackResult","processAttackMessageResult","status","winPlayer","userWSData","userAuthData","errorText","create_room","userGameData","userShips","shipData","start_game","currentPlayerIndex","randomAttack","randomX","randomY","single_play","startBotWebsocket","HTTP_PORT","webSocketServer","setInterval","getTime","minutes","remoteAddress","disconnectedUserId","diconnect","startWebSocketServer"],"sourceRoot":""}